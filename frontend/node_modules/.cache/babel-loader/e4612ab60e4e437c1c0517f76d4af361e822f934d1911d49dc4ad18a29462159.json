{"ast":null,"code":"import React from 'react';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MoviesList = props => {\n  if (!props.movies) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Loading...\"\n    }, void 0, false);\n  } else if (props.movies.length === 0) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"There are no movies at this time.\"\n    }, void 0, false);\n  } else {}\n};\n_c = MoviesList;\nexport default MoviesList;\nvar _c;\n$RefreshReg$(_c, \"MoviesList\");","map":{"version":3,"names":["React","Fragment","_Fragment","jsxDEV","_jsxDEV","MoviesList","props","movies","children","length","_c","$RefreshReg$"],"sources":["/Users/applemacbook/Documents/Projects/donetMovie/frontend/src/movies/MoviesList.tsx"],"sourcesContent":["import React from 'react'\nimport { movieDTO } from './movies.model'\nimport IndividualMovie from './IndividualMovie';\nimport css from './moviesList.module.css'\n\ninterface moviesListsProps {\n    movies?: movieDTO[];\n}\n\n\nconst MoviesList = (props: moviesListsProps) => {\n\n  if(!props.movies) {\n    return <>Loading...</>\n  }else if(props.movies.length === 0){\n    return <>There are no movies at this time.</>\n  } else {\n\n  }\n\n  \n}\n\nexport default MoviesList"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAUzB,MAAMC,UAAU,GAAIC,KAAuB,IAAK;EAE9C,IAAG,CAACA,KAAK,CAACC,MAAM,EAAE;IAChB,oBAAOH,OAAA,CAAAF,SAAA;MAAAM,QAAA,EAAE;IAAU,gBAAE,CAAC;EACxB,CAAC,MAAK,IAAGF,KAAK,CAACC,MAAM,CAACE,MAAM,KAAK,CAAC,EAAC;IACjC,oBAAOL,OAAA,CAAAF,SAAA;MAAAM,QAAA,EAAE;IAAiC,gBAAE,CAAC;EAC/C,CAAC,MAAM,CAEP;AAGF,CAAC;AAAAE,EAAA,GAXKL,UAAU;AAahB,eAAeA,UAAU;AAAA,IAAAK,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}